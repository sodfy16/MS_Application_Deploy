name: Publish to Exchange & Deploy to CH2.0

on:
  pull_request:
    types: [closed]
    branches: [ main ]
    
jobs:
  build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'develop'
    runs-on: self-hosted
    env:
      CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
      CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      # --- START: Added steps for cleanup and verification ---
      - name: Clean up existing Maven settings
        run: |
          echo "Cleaning up ~/.m2 directory..."
          rm -f ~/.m2/settings.xml
          rm -f ~/.m2/settings-security.xml
          ls -la ~/.m2/ || true # List contents, ignore if dir doesn't exist

      # Create settings.xml with the correct configuration
      - name: Create settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>anypoint-exchange</id>
                <username>${{ secrets.CONNECTED_APP_CLIENT_ID }}</username>
                <password>${{ secrets.CONNECTED_APP_CLIENT_SECRET }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>mule-repos</id>
                <repositories>
                  <repository>
                    <id>anypoint-exchange-releases</id>
                    <name>Anypoint Exchange</name>
                    <url>https://maven.anypoint.mulesoft.com/api/v1/maven</url>
                    <layout>default</layout>
                    <releases>
                      <enabled>true</enabled>
                    </releases>
                    <snapshots>
                      <enabled>true</enabled>
                    </snapshots>
                  </repository>
                  <repository>
                    <id>mulesoft-releases</id>
                    <name>MuleSoft Releases</name>
                    <url>https://repository.mulesoft.org/releases/</url>
                  </repository>
                </repositories>
                <pluginRepositories>
                  <pluginRepository>
                    <id>mulesoft-releases</id>
                    <name>MuleSoft Releases</name>
                    <url>https://repository.mulesoft.org/releases/</url>
                    <layout>default</layout>
                  </pluginRepository>
                </pluginRepositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>mule-repos</activeProfile>
            </activeProfiles>
          </settings>
          EOF

      - name: Verify settings.xml content
        run: |
          echo "Contents of ~/.m2/settings.xml:"
          cat ~/.m2/settings.xml
          echo "Listing ~/.m2/ directory after creation:"
          ls -la ~/.m2/
      # --- END: Added steps for cleanup and verification ---

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        working-directory: './sample-app-for-ci-cd'
        run: |
          mvn deploy -X -DskipMunitTests -Dbusiness.group.id=f57ddab8-f102-47ee-9a68-2754650997a5  --settings ~/.m2/settings.xml

      - name: Deploy to CloudHub 2.0
        working-directory: './sample-app-for-ci-cd'  
        run: |
          mvn deploy -X -DskipMunitTests -DmuleDeploy -Dbusiness.group.id=f57ddab8-f102-47ee-9a68-2754650997a5  --settings ~/.m2/settings.xml